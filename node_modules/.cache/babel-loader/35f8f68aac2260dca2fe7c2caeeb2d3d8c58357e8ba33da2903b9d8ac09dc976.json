{"ast":null,"code":"var _jsxFileName = \"/Users/basile/Library/Mobile Documents/com~apple~CloudDocs/Documents/BEWare/App(veux de defaite) recette/recipe/re/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport HomePage from './pages/HomePage';\nimport NewRecipePage from './pages/NewRecipePage';\nimport Auth from './components/Auth';\nimport { supabase, handleSupabaseError, testSupabaseConnection } from './supabaseClient';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [recipes, setRecipes] = useState([]);\n  const [fullScreenRecipe, setFullScreenRecipe] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [connectionStatus, setConnectionStatus] = useState('checking');\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    // Écouter les changements d'authentification\n    const {\n      data: authListener\n    } = supabase.auth.onAuthStateChange((event, session) => {\n      var _session$user;\n      setUser((_session$user = session === null || session === void 0 ? void 0 : session.user) !== null && _session$user !== void 0 ? _session$user : null);\n    });\n\n    // Initialiser l'application\n    const initializeApp = async () => {\n      try {\n        const {\n          data: {\n            user\n          }\n        } = await supabase.auth.getUser();\n        setUser(user);\n        const isConnected = await testSupabaseConnection();\n        if (isConnected) {\n          setConnectionStatus('connected');\n          await fetchRecipes();\n        } else {\n          setConnectionStatus('error');\n        }\n      } catch (error) {\n        console.error('Erreur d\\'initialisation:', error);\n        setConnectionStatus('error');\n      } finally {\n        setLoading(false);\n      }\n    };\n    initializeApp();\n\n    // Nettoyer l'écouteur lors du démontage\n    return () => {\n      authListener.subscription.unsubscribe();\n    };\n  }, []);\n  const fetchRecipes = async () => {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('recipes').select('*');\n      if (error) {\n        handleSupabaseError(error);\n        return;\n      }\n      setRecipes(data || []);\n    } catch (error) {\n      handleSupabaseError(error);\n    }\n  };\n  const addRecipe = async newRecipe => {\n    try {\n      console.log('Nouvelle recette reçue:', newRecipe);\n\n      // Récupérer l'utilisateur actuellement connecté\n      const {\n        data: {\n          user\n        }\n      } = await supabase.auth.getUser();\n      console.log('Utilisateur connecté:', user);\n      if (!user) {\n        console.error('Aucun utilisateur connecté');\n        throw new Error('Vous devez être connecté pour ajouter une recette');\n      }\n\n      // Préparer la recette à ajouter\n      const recipeToAdd = {\n        title: newRecipe.title,\n        prepTime: newRecipe.prepTime,\n        imageUrl: newRecipe.imageUrl || 'https://via.placeholder.com/500x200',\n        ingredients: Array.isArray(newRecipe.ingredients) ? newRecipe.ingredients.filter(ing => ing.trim() !== '') : (newRecipe.ingredients || '').split(',').map(item => item.trim()).filter(item => item !== ''),\n        instructions: Array.isArray(newRecipe.instructions) ? newRecipe.instructions.filter(inst => inst.trim() !== '') : (newRecipe.instructions || '').split(',').map(item => item.trim()).filter(item => item !== ''),\n        user_id: user.id\n      };\n      console.log('Recette à ajouter:', recipeToAdd);\n      const {\n        data,\n        error\n      } = await supabase.from('recipes').insert(recipeToAdd).select();\n      console.log('Résultat de l\\'insertion:', {\n        data,\n        error\n      });\n      if (error) {\n        console.error('Erreur détaillée lors de l\\'ajout:', error);\n        throw error;\n      }\n\n      // Mettre à jour l'état local avec la nouvelle recette\n      setRecipes(prev => [...prev, data[0]]);\n      console.log('Recette ajoutée avec succès');\n      return data[0];\n    } catch (error) {\n      console.error('Erreur complète lors de l\\'ajout de la recette:', error);\n      alert(`Impossible d'ajouter la recette : ${error.message}`);\n      throw error;\n    }\n  };\n  const deleteRecipe = async id => {\n    try {\n      const {\n        error\n      } = await supabase.from('recipes').delete().eq('id', id);\n      if (error) {\n        handleSupabaseError(error);\n        return;\n      }\n\n      // Mettre à jour l'état local\n      setRecipes(prev => prev.filter(recipe => recipe.id !== id));\n\n      // Fermer la vue plein écran si la recette supprimée est en plein écran\n      if (fullScreenRecipe && fullScreenRecipe.id === id) {\n        setFullScreenRecipe(null);\n      }\n    } catch (error) {\n      handleSupabaseError(error);\n    }\n  };\n  const openFullScreen = recipe => {\n    setFullScreenRecipe(recipe);\n  };\n  const closeFullScreen = () => {\n    setFullScreenRecipe(null);\n  };\n  const handleLogout = async () => {\n    try {\n      const {\n        error\n      } = await supabase.auth.signOut();\n      if (error) throw error;\n    } catch (error) {\n      console.error('Erreur de déconnexion:', error);\n    }\n  };\n\n  // Écran de chargement personnalisé\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-screen\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Connexion \\xE0 Supabase...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Écran d'erreur de connexion\n  if (connectionStatus === 'error') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-screen\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Erreur de connexion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Impossible de se connecter \\xE0 Supabase. V\\xE9rifiez vos param\\xE8tres.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        children: \"R\\xE9essayer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: user ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          className: \"logout-btn\",\n          children: \"D\\xE9connexion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(HomePage, {\n              recipes: recipes,\n              onDelete: deleteRecipe,\n              onOpenFullScreen: openFullScreen\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/new-recipe\",\n            element: /*#__PURE__*/_jsxDEV(NewRecipePage, {\n              onAddRecipe: addRecipe\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 26\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this), fullScreenRecipe && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"full-screen-overlay\",\n          onClick: closeFullScreen,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"full-screen-recipe\",\n            onClick: e => e.stopPropagation(),\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"close-full-screen-btn\",\n              onClick: closeFullScreen,\n              children: \"\\u2715\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"full-screen-recipe-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"full-screen-recipe-image\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: fullScreenRecipe.imageUrl,\n                  alt: fullScreenRecipe.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"full-screen-recipe-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: fullScreenRecipe.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Temps de pr\\xE9paration :\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 26\n                  }, this), \" \", fullScreenRecipe.prepTime]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"full-screen-section\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"Ingr\\xE9dients\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                    children: fullScreenRecipe.ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                      children: ingredient\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 242,\n                      columnNumber: 29\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"full-screen-section\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"Instructions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n                    children: fullScreenRecipe.instructions.map((step, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                      children: step\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 251,\n                      columnNumber: 29\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 249,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/auth\",\n          element: /*#__PURE__*/_jsxDEV(Auth, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/auth\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"vNTa2/IuPug8Lrc3Qe0ef3pIlxg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Navigate","HomePage","NewRecipePage","Auth","supabase","handleSupabaseError","testSupabaseConnection","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","recipes","setRecipes","fullScreenRecipe","setFullScreenRecipe","loading","setLoading","connectionStatus","setConnectionStatus","user","setUser","data","authListener","auth","onAuthStateChange","event","session","_session$user","initializeApp","getUser","isConnected","fetchRecipes","error","console","subscription","unsubscribe","from","select","addRecipe","newRecipe","log","Error","recipeToAdd","title","prepTime","imageUrl","ingredients","Array","isArray","filter","ing","trim","split","map","item","instructions","inst","user_id","id","insert","prev","alert","message","deleteRecipe","delete","eq","recipe","openFullScreen","closeFullScreen","handleLogout","signOut","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","window","location","reload","path","element","onDelete","onOpenFullScreen","onAddRecipe","e","stopPropagation","src","alt","ingredient","index","step","to","_c","$RefreshReg$"],"sources":["/Users/basile/Library/Mobile Documents/com~apple~CloudDocs/Documents/BEWare/App(veux de defaite) recette/recipe/re/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport HomePage from './pages/HomePage';\nimport NewRecipePage from './pages/NewRecipePage';\nimport Auth from './components/Auth';\nimport { supabase, handleSupabaseError, testSupabaseConnection } from './supabaseClient';\nimport './App.css';\n\nfunction App() {\n  const [recipes, setRecipes] = useState([]);\n  const [fullScreenRecipe, setFullScreenRecipe] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [connectionStatus, setConnectionStatus] = useState('checking');\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    // Écouter les changements d'authentification\n    const { data: authListener } = supabase.auth.onAuthStateChange(\n      (event, session) => {\n        setUser(session?.user ?? null);\n      }\n    );\n\n    // Initialiser l'application\n    const initializeApp = async () => {\n      try {\n        const { data: { user } } = await supabase.auth.getUser();\n        setUser(user);\n\n        const isConnected = await testSupabaseConnection();\n        \n        if (isConnected) {\n          setConnectionStatus('connected');\n          await fetchRecipes();\n        } else {\n          setConnectionStatus('error');\n        }\n      } catch (error) {\n        console.error('Erreur d\\'initialisation:', error);\n        setConnectionStatus('error');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    initializeApp();\n\n    // Nettoyer l'écouteur lors du démontage\n    return () => {\n      authListener.subscription.unsubscribe();\n    };\n  }, []);\n\n  const fetchRecipes = async () => {\n    try {\n      const { data, error } = await supabase\n        .from('recipes')\n        .select('*');\n\n      if (error) {\n        handleSupabaseError(error);\n        return;\n      }\n\n      setRecipes(data || []);\n    } catch (error) {\n      handleSupabaseError(error);\n    }\n  };\n\n  const addRecipe = async (newRecipe) => {\n    try {\n      console.log('Nouvelle recette reçue:', newRecipe);\n\n      // Récupérer l'utilisateur actuellement connecté\n      const { data: { user } } = await supabase.auth.getUser();\n      console.log('Utilisateur connecté:', user);\n\n      if (!user) {\n        console.error('Aucun utilisateur connecté');\n        throw new Error('Vous devez être connecté pour ajouter une recette');\n      }\n\n      // Préparer la recette à ajouter\n      const recipeToAdd = {\n        title: newRecipe.title,\n        prepTime: newRecipe.prepTime,\n        imageUrl: newRecipe.imageUrl || 'https://via.placeholder.com/500x200',\n        ingredients: Array.isArray(newRecipe.ingredients) \n          ? newRecipe.ingredients.filter(ing => ing.trim() !== '')\n          : (newRecipe.ingredients || '').split(',').map(item => item.trim()).filter(item => item !== ''),\n        instructions: Array.isArray(newRecipe.instructions)\n          ? newRecipe.instructions.filter(inst => inst.trim() !== '')\n          : (newRecipe.instructions || '').split(',').map(item => item.trim()).filter(item => item !== ''),\n        user_id: user.id\n      };\n\n      console.log('Recette à ajouter:', recipeToAdd);\n\n      const { data, error } = await supabase\n        .from('recipes')\n        .insert(recipeToAdd)\n        .select();\n\n      console.log('Résultat de l\\'insertion:', { data, error });\n\n      if (error) {\n        console.error('Erreur détaillée lors de l\\'ajout:', error);\n        throw error;\n      }\n\n      // Mettre à jour l'état local avec la nouvelle recette\n      setRecipes(prev => [...prev, data[0]]);\n      \n      console.log('Recette ajoutée avec succès');\n      return data[0];\n    } catch (error) {\n      console.error('Erreur complète lors de l\\'ajout de la recette:', error);\n      alert(`Impossible d'ajouter la recette : ${error.message}`);\n      throw error;\n    }\n  };\n\n  const deleteRecipe = async (id) => {\n    try {\n      const { error } = await supabase\n        .from('recipes')\n        .delete()\n        .eq('id', id);\n\n      if (error) {\n        handleSupabaseError(error);\n        return;\n      }\n\n      // Mettre à jour l'état local\n      setRecipes(prev => prev.filter(recipe => recipe.id !== id));\n      \n      // Fermer la vue plein écran si la recette supprimée est en plein écran\n      if (fullScreenRecipe && fullScreenRecipe.id === id) {\n        setFullScreenRecipe(null);\n      }\n    } catch (error) {\n      handleSupabaseError(error);\n    }\n  };\n\n  const openFullScreen = (recipe) => {\n    setFullScreenRecipe(recipe);\n  };\n\n  const closeFullScreen = () => {\n    setFullScreenRecipe(null);\n  };\n\n  const handleLogout = async () => {\n    try {\n      const { error } = await supabase.auth.signOut();\n      if (error) throw error;\n    } catch (error) {\n      console.error('Erreur de déconnexion:', error);\n    }\n  };\n\n  // Écran de chargement personnalisé\n  if (loading) {\n    return (\n      <div className=\"loading-screen\">\n        <div className=\"loading-spinner\"></div>\n        <p>Connexion à Supabase...</p>\n      </div>\n    );\n  }\n\n  // Écran d'erreur de connexion\n  if (connectionStatus === 'error') {\n    return (\n      <div className=\"error-screen\">\n        <h1>Erreur de connexion</h1>\n        <p>Impossible de se connecter à Supabase. Vérifiez vos paramètres.</p>\n        <button onClick={() => window.location.reload()}>Réessayer</button>\n      </div>\n    );\n  }\n\n  return (\n    <Router>\n      <div className=\"App\">\n        {user ? (\n          <>\n            <button \n              onClick={handleLogout} \n              className=\"logout-btn\"\n            >\n              Déconnexion\n            </button>\n            <Routes>\n              <Route \n                path=\"/\" \n                element={\n                  <HomePage \n                    recipes={recipes} \n                    onDelete={deleteRecipe} \n                    onOpenFullScreen={openFullScreen}\n                  />\n                } \n              />\n              <Route \n                path=\"/new-recipe\" \n                element={<NewRecipePage onAddRecipe={addRecipe} />} \n              />\n            </Routes>\n\n            {/* Overlay plein écran */}\n            {fullScreenRecipe && (\n              <div className=\"full-screen-overlay\" onClick={closeFullScreen}>\n                <div \n                  className=\"full-screen-recipe\" \n                  onClick={(e) => e.stopPropagation()}\n                >\n                  <button \n                    className=\"close-full-screen-btn\" \n                    onClick={closeFullScreen}\n                  >\n                    ✕\n                  </button>\n                  <div className=\"full-screen-recipe-content\">\n                    <div className=\"full-screen-recipe-image\">\n                      <img \n                        src={fullScreenRecipe.imageUrl} \n                        alt={fullScreenRecipe.title} \n                      />\n                    </div>\n                    <div className=\"full-screen-recipe-details\">\n                      <h2>{fullScreenRecipe.title}</h2>\n                      <p><strong>Temps de préparation :</strong> {fullScreenRecipe.prepTime}</p>\n                      \n                      <div className=\"full-screen-section\">\n                        <h3>Ingrédients</h3>\n                        <ul>\n                          {fullScreenRecipe.ingredients.map((ingredient, index) => (\n                            <li key={index}>{ingredient}</li>\n                          ))}\n                        </ul>\n                      </div>\n                      \n                      <div className=\"full-screen-section\">\n                        <h3>Instructions</h3>\n                        <ol>\n                          {fullScreenRecipe.instructions.map((step, index) => (\n                            <li key={index}>{step}</li>\n                          ))}\n                        </ol>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n          </>\n        ) : (\n          <Routes>\n            <Route path=\"/auth\" element={<Auth />} />\n            <Route path=\"*\" element={<Navigate to=\"/auth\" />} />\n          </Routes>\n        )}\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}