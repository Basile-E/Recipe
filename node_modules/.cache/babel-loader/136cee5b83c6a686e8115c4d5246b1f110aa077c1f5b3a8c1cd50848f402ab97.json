{"ast":null,"code":"import { createClient } from '@supabase/supabase-js';\n\n// Remplacez ces valeurs par vos propres clés Supabase\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY;\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\n\n// Fonction utilitaire pour gérer les erreurs\nexport const handleSupabaseError = error => {\n  console.error('Supabase Error:', error);\n  // Vous pouvez ajouter ici une logique de gestion d'erreur plus avancée\n};\n\n// Fonction de test de connexion\nexport const testSupabaseConnection = async () => {\n  try {\n    console.log('Tentative de connexion à Supabase...');\n    const {\n      data,\n      error\n    } = await supabase.from('recipes').select('*').limit(1);\n    if (error) {\n      console.error('Erreur de connexion:', error);\n      return false;\n    }\n    console.log('Connexion réussie !', data);\n    return true;\n  } catch (error) {\n    console.error('Erreur inattendue:', error);\n    return false;\n  }\n};","map":{"version":3,"names":["createClient","supabaseUrl","process","env","REACT_APP_SUPABASE_URL","supabaseAnonKey","REACT_APP_SUPABASE_ANON_KEY","supabase","handleSupabaseError","error","console","testSupabaseConnection","log","data","from","select","limit"],"sources":["/Users/basile/Library/Mobile Documents/com~apple~CloudDocs/Documents/BEWare/App(veux de defaite) recette/recipe/re/src/supabaseClient.js"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\n\n// Remplacez ces valeurs par vos propres clés Supabase\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY;\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\n\n// Fonction utilitaire pour gérer les erreurs\nexport const handleSupabaseError = (error) => {\n  console.error('Supabase Error:', error);\n  // Vous pouvez ajouter ici une logique de gestion d'erreur plus avancée\n};\n\n// Fonction de test de connexion\nexport const testSupabaseConnection = async () => {\n  try {\n    console.log('Tentative de connexion à Supabase...');\n    const { data, error } = await supabase\n      .from('recipes')\n      .select('*')\n      .limit(1);\n\n    if (error) {\n      console.error('Erreur de connexion:', error);\n      return false;\n    }\n\n    console.log('Connexion réussie !', data);\n    return true;\n  } catch (error) {\n    console.error('Erreur inattendue:', error);\n    return false;\n  }\n}; "],"mappings":"AAAA,SAASA,YAAY,QAAQ,uBAAuB;;AAEpD;AACA,MAAMC,WAAW,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;AACtD,MAAMC,eAAe,GAAGH,OAAO,CAACC,GAAG,CAACG,2BAA2B;AAE/D,OAAO,MAAMC,QAAQ,GAAGP,YAAY,CAACC,WAAW,EAAEI,eAAe,CAAC;;AAElE;AACA,OAAO,MAAMG,mBAAmB,GAAIC,KAAK,IAAK;EAC5CC,OAAO,CAACD,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;EACvC;AACF,CAAC;;AAED;AACA,OAAO,MAAME,sBAAsB,GAAG,MAAAA,CAAA,KAAY;EAChD,IAAI;IACFD,OAAO,CAACE,GAAG,CAAC,sCAAsC,CAAC;IACnD,MAAM;MAAEC,IAAI;MAAEJ;IAAM,CAAC,GAAG,MAAMF,QAAQ,CACnCO,IAAI,CAAC,SAAS,CAAC,CACfC,MAAM,CAAC,GAAG,CAAC,CACXC,KAAK,CAAC,CAAC,CAAC;IAEX,IAAIP,KAAK,EAAE;MACTC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C,OAAO,KAAK;IACd;IAEAC,OAAO,CAACE,GAAG,CAAC,qBAAqB,EAAEC,IAAI,CAAC;IACxC,OAAO,IAAI;EACb,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,OAAO,KAAK;EACd;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}